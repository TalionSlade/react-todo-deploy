{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","key","require","v4","App","useState","setTodos","todoNameRef","useRef","uuidv4","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","current","value","prevTodos","filter","length","ReactDOM","render","document","getElementById"],"mappings":"wKAEe,SAASA,EAAT,GAAqC,IAArBA,EAAoB,EAApBA,KAAOC,EAAa,EAAbA,WAKlC,OACI,6BACI,+BACI,2BAAOC,KAAK,WAAWC,QAASH,EAAKI,SAAUC,SAP3D,WACIJ,EAAWD,EAAKM,OAOPN,EAAKO,OCTP,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAQR,EAAa,EAAbA,WACvC,OACIQ,EAAMC,KAAI,SAAAV,GACN,OAAO,kBAAC,EAAD,CAAMW,IAAKX,EAAKM,GAAIL,WAAYA,EAAYD,KAAMA,OCF9CY,EAAQ,GAAvBC,GAgDOC,MA9Cf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACLN,EADK,KACGO,EADH,KAEPC,EAAcC,mBACRC,EAAWP,EAAQ,GAAvBC,GAgCR,OA9BFO,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAPpB,kBAQpBJ,GAAaL,EAASK,KAC1B,IAEFD,qBAAU,WACRI,aAAaE,QAZW,gBAYeJ,KAAKK,UAAUlB,MACrD,CAACA,IAwBA,oCACA,kBAACD,EAAD,CAAUC,MAAOA,EAAOR,WAjB5B,SAAoBK,GAClB,IAAMsB,EAAQ,YAAOnB,GACfT,EAAO4B,EAASC,MAAK,SAAA7B,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBY,EAASY,MAcP,2BAAOE,IAAKb,EAAYf,KAAK,SAC7B,4BAAQ6B,QAbV,SAAuBC,GACrB,IAAMzB,EAAOU,EAAYgB,QAAQC,MACrB,KAAT3B,IACHS,GAAS,SAAAmB,GACT,MAAM,GAAN,mBAAUA,GAAV,CAAoB,CAAC7B,GAAIa,IAASZ,KAAKA,EAAOH,UAAW,QAE3Da,EAAYgB,QAAQC,MAAQ,QAO1B,gBACA,4BAAQH,QA1BZ,WACE,IAAMH,EAAWnB,EAAM2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YAC5CY,EAASY,KAwBP,oBACF,iCAAOnB,EAAM2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YAAUiC,OAA5C,iBCzCFC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2b9f0fb7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function todo({ todo , toggleTodo}) {\r\n    function handleTodoClick(){\r\n        toggleTodo(todo.id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick}/>\r\n                {todo.name}\r\n            </label>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\nexport default function TodoList({ todos , toggleTodo}) {\r\n    return (\r\n        todos.map(todo => {\r\n            return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo}/>\r\n        })\r\n    )\r\n}\r\n","import React,{ useState , useRef , useEffect} from 'react';\nimport TodoList from './TodoList'\n\nconst { v4: uuidv4 } = require('uuid');\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\nfunction App() {\n  const [ todos , setTodos] = useState([])\n  const todoNameRef = useRef()\n  const { v4: uuidv4 } = require('uuid');\n\nuseEffect(() => {\n  const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n  if (storedTodos) setTodos(storedTodos)\n},[])\n\nuseEffect(()  => {\n  localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(todos))\n}, [todos])\n\nfunction handleClearTodo(){\n  const newTodos = todos.filter(todo => !todo.complete)\n  setTodos(newTodos)\n}\n\n\nfunction toggleTodo(id){\n  const newTodos = [...todos]\n  const todo = newTodos.find(todo => todo.id === id)\n  todo.complete = !todo.complete\n  setTodos(newTodos)\n}\n  function handleAddTodo(e){\n    const name = todoNameRef.current.value\n    if(name === '')return\n    setTodos(prevTodos => {\n    return[...prevTodos,{id: uuidv4(),name:name , complete : false}]\n  })\n  todoNameRef.current.value = null\n}\n\n  return (\n    <>\n    <TodoList todos={todos} toggleTodo={toggleTodo}/>\n    <input ref={todoNameRef}type=\"text\"/>\n    <button onClick={handleAddTodo} >Add New Todo</button>\n    <button onClick={handleClearTodo}> Clear Completed</button>\n  <div> {todos.filter(todo => !todo.complete).length} todos left</div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App /> ,document.getElementById('root'));\n\n"],"sourceRoot":""}